import Resource from './resource.js';
export class Roles extends Resource {
    constructor(client) {
        super(client, {
            path: '/admin/realms/{realm}',
            getUrlParams: () => ({
                realm: client.realmName,
            }),
            getBaseUrl: () => client.baseUrl,
        });
        this.find = this.makeRequest({
            method: 'GET',
            path: '/roles',
        });
        this.create = this.makeRequest({
            method: 'POST',
            path: '/roles',
            returnResourceIdInLocationHeader: { field: 'roleName' },
        });
        this.findOneByName = this.makeRequest({
            method: 'GET',
            path: '/roles/{name}',
            urlParamKeys: ['name'],
            catchNotFound: true,
        });
        this.updateByName = this.makeUpdateRequest({
            method: 'PUT',
            path: '/roles/{name}',
            urlParamKeys: ['name'],
        });
        this.delByName = this.makeRequest({
            method: 'DELETE',
            path: '/roles/{name}',
            urlParamKeys: ['name'],
        });
        this.findUsersWithRole = this.makeRequest({
            method: 'GET',
            path: '/roles/{name}/users',
            urlParamKeys: ['name'],
            catchNotFound: true,
        });
        this.findOneById = this.makeRequest({
            method: 'GET',
            path: '/roles-by-id/{id}',
            urlParamKeys: ['id'],
            catchNotFound: true,
        });
        this.createComposite = this.makeUpdateRequest({
            method: 'POST',
            path: '/roles-by-id/{roleId}/composites',
            urlParamKeys: ['roleId'],
        });
        this.getCompositeRoles = this.makeRequest({
            method: 'GET',
            path: '/roles-by-id/{id}/composites',
            urlParamKeys: ['id'],
        });
        this.getCompositeRolesForRealm = this.makeRequest({
            method: 'GET',
            path: '/roles-by-id/{id}/composites/realm',
            urlParamKeys: ['id'],
        });
        this.getCompositeRolesForClient = this.makeRequest({
            method: 'GET',
            path: '/roles-by-id/{id}/composites/clients/{clientId}',
            urlParamKeys: ['id', 'clientId'],
        });
        this.delCompositeRoles = this.makeUpdateRequest({
            method: 'DELETE',
            path: '/roles-by-id/{id}/composites',
            urlParamKeys: ['id'],
        });
        this.updateById = this.makeUpdateRequest({
            method: 'PUT',
            path: '/roles-by-id/{id}',
            urlParamKeys: ['id'],
        });
        this.delById = this.makeRequest({
            method: 'DELETE',
            path: '/roles-by-id/{id}',
            urlParamKeys: ['id'],
        });
        this.updatePermission = this.makeUpdateRequest({
            method: 'PUT',
            path: '/roles-by-id/{id}/management/permissions',
            urlParamKeys: ['id'],
        });
        this.listPermissions = this.makeRequest({
            method: 'GET',
            path: '/roles-by-id/{id}/management/permissions',
            urlParamKeys: ['id'],
        });
    }
}
//# sourceMappingURL=roles.js.map